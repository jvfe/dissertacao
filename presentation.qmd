---
title: "O Ecossistema Computacional da Metagenômica"
subtitle: "Fluxos de Trabalho e Reprodutibilidade"
author: "João Vitor Cavalcante"
lang: pt
bibliography: refs.bib
csl: diabetologia.csl
format: 
  revealjs:
    theme: "night"
    transition: fade
    slide-number: true
    multiplex: true # audience can follow along w/ mobile devices
    fragments: true
    logo: https://i.imgur.com/ena8fiz.png
---

# Introdução

## Visão Geral - Metagenômica {.smaller}

:::: {.columns}

::: {.column width="50%"}
- A técnica do *whole-genome sequencing* possibilitou o sequenciamento
do conteúdo genético total de amostras ambientais, originando a metagenômica *shotgun* (MS)

- A MS gera um alto volume de dados, e portanto, há a necessidade do desenvolvimento de
ferramentas computacionais que processem esses dados e gerem informação científica que descreva de 
forma acurada e reproduzível achados acerca do microambiente de estudo
:::

::: {.column width="50%" style="text-align: center;"}
![](https://i.imgur.com/ma0INe4.png)
:::

::::

## Desenvolvimento de Software Científico {.smaller}

:::: {.columns}

::: {.column width="50%"}
- Metodologias computacionais constituem parte indissociável da biologia molecular moderna

- A agregação de ferramentas computacionais em sequência, ou fluxos de trabalho, 
surgem como *softwares* que prezam um método reprodutível baseado em ferramentas previamente curadas.

- Metodologias que possuam estabilidade a longo prazo, alta instalabilidade e parametrização, documentação descritiva e
resultados facilmente explorávels é essencial para o avanço das análises moleculares.

:::

::: {.column width="40%" style="text-align: center;"}
![](./index/figure/fluxo_de_trabalho.png)
:::

::::


## O Ecossistema Computacional em Metagenômica {.smaller}

- Podemos agrupar as metodologias da MS em duas grandes categorias: As baseadas em montagem e as livres de montagem.

- As baseadas em montagem são amplas e cobrem os mais diversos aspectos do processamento de dados de MS, mas as livres de montagem são escassas,
sobretudo ao considerarmos boas práticas de desenvolvimento de software científico. Nesse contexto, destaca-se o MEDUSA

- Há a necessidade de desenvolver uma metodologia para dados de MS que siga boas práticas de desenvolvimento de software científico

# Objetivo

- Obter uma visão geral do ecossistema computacional em metagenômica atual
e como ele se associa com princípios de desenvolvimento de software científico, de-
senvolvendo então uma metodologia para dados de MS que possibilite uma análisa
metagenômica compreensiva, de forma reprodutível e flexível.

# Capítulo I

![](./index/figure/paper1.png)

## Software em meta-ômica possibilitou novas descobertas

- No entanto, esses *softwares* ainda possuem muitos desafios a frente.

- Instalabilidade, acessibilidade ao usuário e portabilidade são desafios não apenas em meta-ômica mas bioinformática como um todo.

- Esses desafios podem ser enfrentados com empacotamento de código, tecnologia de contêiner, curadoria do ferramentário
e orquestradores de fluxo de trabalho

## A adoção de boas práticas de software em Meta-ồmica {.smaller}

- Apesar da ciência da computação favorecer reprodutibilidade, ela ainda é negligenciada, devido 
a dificuldades em instalação, execução e documentação. 

- O uso de uma única versão de *software*, disponibilizada através de tecnologias de contêineres
como Docker e Singularity aumentam a instalabilidade, a estabilidade a longo prazo e até taxas de citação
do software.

- A utilização de orquestradores de fluxos de trabalho, para análises que envolvem várias ferramentas em sequência,
também se torna indispensável para garantir maior reprodutibilidade, além facilidades na execução, aumentando também
a acessibilidade ao usuário.

## Avaliação geral {.smaller}

- Não houve ainda uma avaliação da implementação dessas tecnologias em meta-ômica, o que pode apontar 
para uma baixa adoção.

- Ademais, sugerimos que, após uma avaliação de fluxos de trabalho citados em uma revisão de metatranscriptômica,
a aderência a esses princípios é ainda mais baixa ao considerarmos essa abordagem.

![](./index/figure/table_paper1.png){width=500}

## Em conclusão

- *Software* para metagenômica e metatranscriptômica precisam ser desenvolvidos com
clareza, reprodutibilidade e reutilização como princípios guiadores.

- A baixa aderência a esses princípios é ainda mais claro ao avaliar o estado do *software*
em metatranscriptômica e integração de dados.

- A adoção dessas diretrizes não só ilustra a qualidade dessas metodologias computacionais,
mas também garante que sejam capazes de suportados a longo prazo.

# Capítulo II

![](./index/figure/paper2.png)

## Fluxos de trabalho para metagenômica

- Entre os livres de montagem, há um destaque no MEDUSA, que realizou uma curadoria
cuidadosa dos softwares a serem incluídos através de um benchmarking de performance e sensitividade.

- No entanto, MEDUSA possuía algumas limitações: BioConda, Snakemake e referências estáticas

## Introduzindo EURYALE {.smaller}

<center>
![](https://github.com/dalmolingroup/euryale/blob/main/assets/euryale_logo.png?raw=true){width=500}
</center>

- Mais portável, com execução em Docker ou Singularity, e suporte nativo a gerenciadores de lote como SLURM.

- Mais parametrizável, possibilitando o uso opcional de diferentes etapas de análise e se adaptando a diferentes referências

- Mais acessível, com a geração de relatórios automáticos e interativos que possibilitam uma melhor exploração de dados.

## Metodologia

- Utilizamos o template nf-core, que valoriza boas práticas de desenvolvimento de software e, dentre outras coisas,
possibilita fácil adaptação a diferentes usos de recursos.

- MicroView, ferramenta desenvolvida para o *pipeline* gerar relatórios automatizados de métricas de diversidade,
é feita em Python e depende no Scikit-Bio.

---

<center>
![](index/figure/paper2_fig1.png)
</center>

- Diagrama ilustrando cada passo do fluxo de trabalho EURYALE, se iniciando com leituras FASTQ como entrada. Círculos são passos habilitados, quadrados passos desabilitados por padrão.

- Diferente do antecessor, o EURYALE possibilita o uso de novas referências, mas com suporte para as referências do MEDUSA através da entrada *download* (`-entry download`)

## Detalhes da implementação

- Nova ferramenta de classificação, Kraken2, visto o suporte que a ferramenta têm obtido no tempo após o desenvolvimento do MEDUSA.

- Exemplo de execução em Docker:

```bash
nextflow run dalmolingroup/euryale \
  --input samplesheet.csv \
  --outdir <output directory> \
  --kaiju_db <kaiju database> \
  --reference_fasta <reference FASTA> \
  --host_fasta <host reference FASTA> \
  --id_mapping <ID mapping file> \
  -profile docker
```

## Relatórios automatizados {.smaller}

:::: {.columns}

::: {.column width="50%"}
- Além das visualizações Krona para cada amostra, também implementamos MultiQC e MicroView no EURYALE.

- Figura incluída como parte do relatório MultiQC do EURYALE. A: Figura da etapa de controle de qualidade; B: Figura da etapa de classificação taxonômica.

:::

::: {.column width="40%" style="text-align: center;"}
![](index/figure/paper2_fig2.png)
:::

::::

## Relatórios automatizados {.smaller}

<center>
![](index/figure/paper2_fig3.png)
</center>

- Figura incluída como parte do relatório MicroView do EURYALE. Um gráfico de dispersão interativo de Equabilidade de Pielou e diversidade de Shannon.

- O MicroView também gera visualizações da diversidade Bray-Curtis e abundâncias relativas de cada táxon em cada amostra.

- Também pode ser executado de forma isolada fora do *pipeline*

## Conclusões

<center>
![](https://github.com/dalmolingroup/euryale/blob/main/assets/euryale_logo.png?raw=true){width=500}
</center>

- EURYALE se aproveita da sensitividade e cuidadosa curadoria ferramental do seu antecessor

- Melhora em termos de parametrização, suporte a longo prazo, adaptabilidade a diferentes contextos e acessibilidade de dados.

# Discussão

- Averiguamos limitações na adoção de boas práticas em fluxos de trabalho em meta-ômica 

- Aplicamos os príncipios postos a uma metodologia, construída através de rigoroso *benchmarking*, MEDUSA

- Através disso, construímos o EURYALE:
  - Maior parametrização
  - Documentação descritiva
  - Maior acessibilidade de dados

---

![](index/figure/euryale_entries.drawio.png)

- Diagrama ilustrando como a entrada de download do EURYALE adquire
os bancos de dados que alimentam a entrada principal. Com uma análise
típica do zero sendo constituída por ambas etapas.

--- 

![](index/figure/multiqc_example.png)

- Exemplo do cabeçalho de um relatório gerado através da ferramenta MultiQC, 
implementada como parte integrante do EURYALE.

--- 

![](index/figure/microview_example.png)
- Exemplo do cabeçalho de um relatório gerado através da ferramenta Microview, 
escrita em Python e implementada como parte integrante do EURYALE.


---

![](index/figure/seqera_platform_example.png)
- Porção inicial da interface gráfica do EURYALE na Seqera Platform
(<https://cloud.seqera.io/>).

# Conclusões

- Observamos uma baixa aderência a boas práticas de desenvolvimento, sobretudo no
que tange pipelines de análise de dados

- Desenvolvemos o EURYALE, que possibilita uma análise completa de dados de MS e adere aos princípios já citados

- No entanto, metodologias de integração de dados meta-ômicos que sigam as boas práticas ainda são escassos


# Referências {.scrollable}

::: {#refs}
:::
